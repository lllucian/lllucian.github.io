<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>VI/VIM命令</title>
    <url>/2022/07/25/VI-VIM%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="vi-x2F-vim-按键说明"><a href="#vi-x2F-vim-按键说明" class="headerlink" title="vi&#x2F;vim 按键说明"></a>vi&#x2F;vim 按键说明</h1><h2 id="第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等"><a href="#第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等" class="headerlink" title="第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等"></a>第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等</h2><table>
<tr><th colspan="2"><font font style="font-weight: bold;">移动光标的方法</font></th></tr>
    <tr><td width="20%">h 或 向左箭头键(←)</td>
        <td>光标向左移动一个字符</td></tr>
    <tr><td>j 或 向下箭头键(↓)</td>
        <td>光标向下移动一个字符</td></tr>
    <tr><td>k 或 向上箭头键(↑)</td>
        <td>光标向上移动一个字符</td></tr>
    <tr><td>l 或 向右箭头键(→)</td>
        <td>光标向右移动一个字符</td></tr>
    <tr><td colspan="2">
        如果你将右手放在键盘上的话，你会发现 hjkl 是排列在一起的，因此可以使用这四个按钮来移动光标。
        如果想要进行多次移动的话，例如向下移动 30 行，可以使用 "30j" 或 "30↓" 的组合按键，
        亦即加上想要进行的次数(数字)后，按下动作即可！</td></tr>
    <tr><td>[Ctrl] + [f]</td>
        <td>屏幕『向下』移动一页，相当于 [Page Down]按键
        (常用)</td></tr>
    <tr><td>[Ctrl] + [b]</td>
        <td>屏幕『向上』移动一页，相当于 [Page Up] 按键
        (常用)</td></tr>
    <tr><td>[Ctrl] + [d]</td>
        <td>屏幕『向下』移动半页</td></tr>
    <tr><td>[Ctrl] + [u]</td>
        <td>屏幕『向上』移动半页</td></tr>
    <tr><td>+</td>
        <td>光标移动到非空格符的下一行</td></tr>
    <tr><td>-</td>
        <td>光标移动到非空格符的上一行</td></tr>
    <tr><td>n&lt;space&gt;</td>
        <td>那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n
        个字符。例如 20&lt;space&gt; 则光标会向后面移动 20 个字符距离。</td></tr>
    <tr><td>0 或功能键[Home]</td>
        <td>这是数字『 0 』：移动到这一行的最前面字符处
        (常用)</td></tr>
    <tr><td>$ 或功能键[End]</td>
        <td>移动到这一行的最后面字符处(常用)</td></tr>
    <tr><td>H</td>
        <td>光标移动到这个屏幕的最上方那一行的第一个字符</td></tr>
    <tr><td>M</td>
        <td>光标移动到这个屏幕的中央那一行的第一个字符</td></tr>
    <tr><td>L</td>
        <td>光标移动到这个屏幕的最下方那一行的第一个字符</td></tr>
    <tr><td>G</td>
        <td>移动到这个档案的最后一行(常用)</td></tr>
    <tr><td>nG</td>
        <td>n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 
        行(可配合 :set nu)</td></tr>
    <tr><td>gg</td>
        <td>移动到这个档案的第一行，相当于 1G 啊！
        (常用)</td></tr>
    <tr><td>n&lt;Enter&gt;</td>
        <td>n 为数字。光标向下移动 n 行(常用)</td></tr>
<tr><th colspan="2"><font style="font-weight: bold;">搜索替换</font></th></tr>
    <tr><td>/word</td>
        <td>向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 
        这个字符串，就输入 /vbird 即可！
        (常用)</td></tr>
    <tr><td>?word</td>
        <td>向光标之上寻找一个字符串名称为 word 的字符串。</td></tr>
    <tr><td>n</td>
        <td>这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说，
        如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 
        的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr>
    <tr><td>N</td>
        <td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。
        例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td></tr>
    <tr><td colspan="2">
        使用 /word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！
    </td></tr>
    <tr><td>:n1,n2s/word1/word2/g</td>
        <td>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为
        word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则：
        <br/>
        『:100,200s/vbird/VBIRD/g』。(常用)
        </td>
    </tr>
    <tr><td><span class="marked">:1,$s/word1/word2/g</span> 或 <span class="marked">:%s/word1/word2/g</span></td>
        <td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为
        word2 ！(常用)</td></tr>
    <tr><td><span class="marked">:1,$s/word1/word2/gc</span> 或 <span class="marked">:%s/word1/word2/gc</span></td>
        <td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为
        word2 ！且在取代前显示提示字符给用户确认 (confirm)
        是否需要取代！(常用)</td></tr>
<tr><th colspan="2"><font style="font-weight:bold;">删除、复制与贴上</font></th></tr>
    <tr><td>x, X</td>
        <td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)，
         X 为向前删除一个字符(相当于 [backspace] 亦即是退格键)
        (常用)</td></tr>
    <tr><td>nx</td>
        <td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符，
        『10x』。</td></tr>
    <tr><td>dd</td>
        <td>剪切游标所在的那一整行(常用)，用 p/P 可以粘贴。</td></tr>
    <tr><td>ndd</td>
        <td>n 为数字。剪切光标所在的向下 n 行，例如 20dd 则是剪切 20 行(常用)，用 p/P 可以粘贴。</td></tr>
    <tr><td>d1G</td>
        <td>删除光标所在到第一行的所有数据</td></tr>
    <tr><td>dG</td>
        <td>删除光标所在到最后一行的所有数据</td></tr>
    <tr><td>d$</td>
        <td>删除游标所在处，到该行的最后一个字符</td></tr>
    <tr><td>d0</td>
        <td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr>
    <tr><td>yy</td>
        <td>复制游标所在的那一行(常用)</td></tr>
    <tr><td>nyy</td>
        <td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20
        行(常用)</td></tr>
    <tr><td>y1G</td>
        <td>复制游标所在行到第一行的所有数据</td></tr>
    <tr><td>yG</td>
        <td>复制游标所在行到最后一行的所有数据</td></tr>
    <tr><td>y0</td>
        <td>复制光标所在的那个字符到该行行首的所有数据</td></tr>
    <tr><td>y$</td>
        <td>复制光标所在的那个字符到该行行尾的所有数据</td></tr>
    <tr><td>p, P</td>
        <td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！
        举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后，
        那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？
        那么原本的第 20 行会被推到变成 30 行。
        (常用)</td></tr>
    <tr><td>J</td>
        <td>将光标所在行与下一行的数据结合成同一行</td></tr>
    <tr><td>c</td>
        <td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr>
    <tr><td>u</td>
        <td>复原前一个动作。(常用)</td></tr>
    <tr><td>[Ctrl]+r</td>
        <td>重做上一个动作。(常用)</td></tr>
    <tr><td colspan="2">这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～
        利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！</td></tr>
    <tr><td>.</td>
        <td>不要怀疑！这就是小数点！意思是重复前一个动作的意思。
        如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！
        (常用)</td></tr>
    </tbody></table>

<h2 id="第二部分：一般模式切换到编辑模式的可用的按钮说明"><a href="#第二部分：一般模式切换到编辑模式的可用的按钮说明" class="headerlink" title="第二部分：一般模式切换到编辑模式的可用的按钮说明"></a>第二部分：一般模式切换到编辑模式的可用的按钮说明</h2><table class="reference">
<tbody><tr><th colspan="2"><font style="font-weight:bold;">进入输入或取代的编辑模式</font></th></tr>
    <tr><td width="120">i, I</td>
        <td>进入输入模式(Insert mode)：
        <br/>
        i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。
        (<span class="text_import2">常用</span>)</td></tr>
    <tr><td>a, A</td>
        <td>进入输入模式(Insert mode)：
<br/>
        a 为『从目前光标所在的下一个字符处开始输入』， A
        为『从光标所在行的最后一个字符处开始输入』。(<span class="text_import2">常用</span>)</td></tr>
    <tr><td>o, O</td>
        <td>进入输入模式(Insert mode)：
<br/>
        这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行；
        O 为在目前光标所在的上一行处输入新的一行！(<span class="text_import2">常用</span>)</td></tr>
    <tr><td>r, R</td>
        <td>进入取代模式(Replace mode)：
<br/>
        r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下
        ESC 为止；(<span class="text_import2">常用</span>)</td></tr>
    <tr><td colspan="2">上面这些按键中，在 vi 画面的左下角处会出现『--INSERT--』或『--REPLACE--』的字样。
        由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时，
        一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！</td></tr>
    <tr><td>[Esc]</td>
        <td>退出编辑模式，回到一般模式中(<span class="text_import2">常用</span>)</td></tr>
    </tbody></table>

<h2 id="第三部分：一般模式切换到指令行模式的可用的按钮说明"><a href="#第三部分：一般模式切换到指令行模式的可用的按钮说明" class="headerlink" title="第三部分：一般模式切换到指令行模式的可用的按钮说明"></a>第三部分：一般模式切换到指令行模式的可用的按钮说明</h2><table class="reference">
<tbody><tr><th colspan="2"><font style="font-weight:bold;">指令行的储存、离开等指令</font></th></tr>
    <tr><td width="160">:w</td>
        <td>将编辑的数据写入硬盘档案中(<span class="text_import2">常用</span>)</td></tr>
    <tr><td>:w!</td>
        <td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入，
        还是跟你对该档案的档案权限有关啊！</td></tr>
    <tr><td>:q</td>
        <td>离开 vi (<span class="text_import2">常用</span>)</td></tr>
    <tr><td>:q!</td>
        <td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr>
    <tr><td colspan="2">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～</td></tr>
    <tr><td>:wq</td>
        <td>储存后离开，若为 :wq! 则为强制储存后离开
        (<span class="text_import2">常用</span>)</td></tr>
    <tr><td>ZZ</td>
        <td>这是大写的 Z 喔！如果修改过，保存当前文件，然后退出！效果等同于(保存并退出)</td></tr>
<tr><td>ZQ</td>
        <td>不保存，强制退出。效果等同于 <span class="marked">:q!</span>。</td></tr>
    <tr><td>:w [filename]</td>
        <td>将编辑的数据储存成另一个档案（类似另存新档）</td></tr>
    <tr><td>:r [filename]</td>
        <td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』
        这个档案内容加到游标所在行后面</td></tr>
    <tr><td>:n1,n2 w [filename]</td>
        <td>将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr>
    <tr><td>:! command</td>
        <td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如
<br/>
        『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！</td></tr>
<tr><th colspan="2"><font style="font-weight: bold;">vim 环境的变更</font></th></tr>
    <tr><td>:set nu</td>
        <td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td></tr>
    <tr><td>:set nonu</td>
        <td>与 set nu 相反，为取消行号！</td></tr>
</tbody></table>

]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql使用主从复制实现读写分离</title>
    <url>/2023/09/01/mysql%E4%BD%BF%E7%94%A8%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%AE%9E%E7%8E%B0%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</url>
    <content><![CDATA[<h1 id="mysql使用主从复制实现读写分离"><a href="#mysql使用主从复制实现读写分离" class="headerlink" title="mysql使用主从复制实现读写分离"></a>mysql使用主从复制实现读写分离</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>macos、docker</p>
<span id="more"></span>
<h2 id="拉取mysql镜像"><a href="#拉取mysql镜像" class="headerlink" title="拉取mysql镜像"></a>拉取mysql镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull mysql:latest</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/docker%E6%8B%89%E5%8F%96mysql%E9%95%9C%E5%83%8F.png" alt="docker拉取mysql镜像.png"></p>
<h2 id="docker-创建network使mysql容器可以在该network下互通"><a href="#docker-创建network使mysql容器可以在该network下互通" class="headerlink" title="docker 创建network使mysql容器可以在该network下互通"></a>docker 创建network使mysql容器可以在该network下互通</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker network create mysql-network</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/docker%E5%88%9B%E5%BB%BAnetwork.png" alt="docker创建network.png"></p>
<h2 id="docker创建两个mysql容器一个为主一个为从"><a href="#docker创建两个mysql容器一个为主一个为从" class="headerlink" title="docker创建两个mysql容器一个为主一个为从"></a>docker创建两个mysql容器一个为主一个为从</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d --name mysql-master --network=mysql-network -e MYSQL_ROOT_PASSWORD=123456 mysql:latest</span><br><span class="line">docker run -d --name mysql-slave --network=mysql-network -e MYSQL_ROOT_PASSWORD=123456 mysql:latest</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E5%88%9B%E5%BB%BA%E4%B8%A4%E4%B8%AAmysql%E5%AE%B9%E5%99%A8.png" alt="创建两个mysql容器.png"></p>
<h2 id="创建my-cnf复制进入两个容器中"><a href="#创建my-cnf复制进入两个容器中" class="headerlink" title="创建my.cnf复制进入两个容器中"></a>创建my.cnf复制进入两个容器中</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch my.cnf</span><br><span class="line">vim my.cnf</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E5%88%9B%E5%BB%BAmy.cnf%E6%96%87%E4%BB%B6.png" alt="创建my.cnf文件.png"><br>mysql-master my.cnf内容如下</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server-id=1 #集群中id唯一</span><br><span class="line">gtid-mode=ON #开启gtid</span><br><span class="line">enforce-gtid-consistency=ON #开启gtid一致性验证</span><br></pre></td></tr></table></figure>
<p>将my.cnf复制到容器的&#x2F;etc&#x2F;mysql&#x2F;</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker cp my.cnf mysql-master:/etc/mysql/my.cnf</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E5%A4%8D%E5%88%B6my.cnf%E8%87%B3mysql-master%E5%AE%B9%E5%99%A8%E4%B8%AD.png" alt="复制my.cnf至mysql-master容器中.png"><br>重启mysql-master容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker restart mysql-master</span><br><span class="line">docker ps -a --filter &quot;name=mysql-master&quot;</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E9%87%8D%E5%90%AF%E5%B9%B6%E6%9F%A5%E7%9C%8Bmysql-master%E7%9A%84%E7%8A%B6%E6%80%81.png" alt="重启并查看mysql-master的状态.png"><br>mysql-slave my.cnf内容如下</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server-id=2 #集群中id唯一</span><br><span class="line">gtid-mode=ON #开启gtid</span><br><span class="line">enforce-gtid-consistency=ON #开启gtid一致性验证</span><br><span class="line">log_slave_updates = ON #从机器开启复制</span><br><span class="line"></span><br><span class="line">read_only = ON #只读</span><br><span class="line">super_read_only = ON #超级账户也是只读</span><br></pre></td></tr></table></figure>
<p>将my.cnf复制到容器的&#x2F;etc&#x2F;mysql&#x2F;</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker cp my.cnf mysql-slave:/etc/mysql/my.cnf</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E5%A4%8D%E5%88%B6my.cnf%E8%87%B3mysql-slave%E5%AE%B9%E5%99%A8%E4%B8%AD.png" alt="复制my.cnf至mysql-slave容器中.png"><br>重启并查看mysql-slave的状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker restart mysql-slave</span><br><span class="line">docker ps -a --filter &quot;name=mysql-slave&quot;</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E9%87%8D%E5%90%AF%E5%B9%B6%E6%9F%A5%E7%9C%8Bmysql-slave%E7%9A%84%E7%8A%B6%E6%80%81.png" alt="重启并查看mysql-slave的状态.png"></p>
<h2 id="开启主从复制"><a href="#开启主从复制" class="headerlink" title="开启主从复制"></a>开启主从复制</h2><p>进入slave容器中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it mysql-slave bash</span><br></pre></td></tr></table></figure>
<p>由于mysql采用的是caching-password的方式直接开启主从复制会报错，所以在从数据库中要去连一次主数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -hmysql-master -p --get-server-public-key</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E8%8E%B7%E5%8F%96%E4%B8%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BF%A1%E4%BB%BB.png" alt="获取主数据库的信任.png"><br>退出主数据库<br>登录从数据库开启主从复制</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">  MASTER_HOST = &#x27;mysql-master&#x27;,</span><br><span class="line">  MASTER_USER = &#x27;root&#x27;,</span><br><span class="line">  MASTER_PASSWORD = &#x27;123456&#x27;,</span><br><span class="line">  MASTER_AUTO_POSITION = 1;</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E6%8C%87%E5%AE%9A%E4%B8%BB%E6%95%B0%E6%8D%AE%E5%BA%93ip%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81.png" alt="指定主数据库ip用户名密码.png"><br>开启主从复制</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">START SLAVE;</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%80%E5%90%AF%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6.png" alt="从数据库开启主从复制.png"><br>检查复制状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SHOW SLAVE STATUS\G</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%BC%80%E5%90%AF%E6%88%90%E5%8A%9F.png" alt="主从复制开启成功.png"></p>
<h2 id="验证主从复制"><a href="#验证主从复制" class="headerlink" title="验证主从复制"></a>验证主从复制</h2><p>在从数据库中创建一个shop库<br><img src="/../uploads/%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E5%BA%93.png" alt="从数据库无法创建库.png"><br>在主数据库中创建一个shop库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -hmysql-master -p</span><br><span class="line">CREATE DATABASE shop default character set utf8mb4;</span><br></pre></td></tr></table></figure>
<p>验证从数据库中是否有该数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">SHOW DATABASE;</span><br></pre></td></tr></table></figure>
<p><img src="/../uploads/%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E4%B9%9F%E6%9C%89%E8%AF%A5%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="从数据库中也有该数据库.png"></p>
<h2 id="验证从数据库是否只读"><a href="#验证从数据库是否只读" class="headerlink" title="验证从数据库是否只读"></a>验证从数据库是否只读</h2><p><img src="/../uploads/%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A0%E6%B3%95%E5%86%99%E5%85%A5%E6%95%B0%E6%8D%AE.png" alt="从数据库无法写入数据.png"></p>
]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>使用logstash同步mysql至elasticsearch</title>
    <url>/2022/07/25/%E4%BD%BF%E7%94%A8logstash%E5%90%8C%E6%AD%A5mysql%E8%87%B3elasticsearch/</url>
    <content><![CDATA[<h1 id="logstash是什么"><a href="#logstash是什么" class="headerlink" title="logstash是什么"></a>logstash是什么</h1><p>根据logstash官网介绍：</p>
<blockquote>
<p>Logstash 是免费且开放的服务器端数据处理管道，能够从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。</p>
</blockquote>
<p>简而言之就是一款可以将数据传输转化到另外的数据库中。</p>
<h1 id="前期环境准备"><a href="#前期环境准备" class="headerlink" title="前期环境准备"></a>前期环境准备</h1><ul>
<li>docker</li>
<li>mysql</li>
<li>elasticsearch</li>
<li>logstash</li>
<li>kibana</li>
</ul>
<h1 id="相关docker-compose文件如下"><a href="#相关docker-compose文件如下" class="headerlink" title="相关docker-compose文件如下"></a>相关docker-compose文件如下</h1><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.5&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  db:</span><br><span class="line">    image: mysql/mysql-server:<span class="number">8.0</span>.<span class="number">26</span></span><br><span class="line">    networks:</span><br><span class="line">      - logstash_sample</span><br><span class="line">    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: <span class="number">123456</span></span><br><span class="line">      MYSQL_DATABASE: logstash_sample</span><br><span class="line">    volumes:</span><br><span class="line">      - ./mysql/init_sql:/docker-<span class="keyword">entrypoint</span><span class="language-bash">-initdb.d</span></span><br><span class="line">  elasticsearch:</span><br><span class="line">    image: elasticsearch:<span class="number">7.17</span>.<span class="number">3</span></span><br><span class="line">    networks:</span><br><span class="line">      - logstash_sample</span><br><span class="line">    environment:</span><br><span class="line">      ES_JAVA_OPTS: <span class="string">&quot;-Xms256m -Xmx256m&quot;</span></span><br><span class="line">      discovery.type: <span class="string">&quot;single-node&quot;</span></span><br><span class="line">  kibana:</span><br><span class="line">    image: kibana:<span class="number">7.17</span>.<span class="number">3</span></span><br><span class="line">    networks:</span><br><span class="line">      - logstash_sample</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;5601:5601&quot;</span></span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    environment:</span><br><span class="line">      ELASTICSEARCH_HOSTS: http://elasticsearch:<span class="number">9200</span></span><br><span class="line">  logstash:</span><br><span class="line">    image: logstash:<span class="number">7.17</span>.<span class="number">3</span></span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">      - elasticsearch</span><br><span class="line">    networks:</span><br><span class="line">      - logstash_sample</span><br><span class="line">    volumes:</span><br><span class="line">      - ./logstash/mysql_lib/mysql-connector-java-<span class="number">8.0</span>.<span class="number">29</span>.jar:/usr/share/logstash/lib/mysql-connector-java-<span class="number">8.0</span>.<span class="number">29</span>.jar</span><br><span class="line">      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml</span><br><span class="line">      - ./logstash/pipeline:/usr/share/logstash/pipeline</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  logstash_sample: &#123;&#125;</span><br></pre></td></tr></table></figure>
<h1 id="在logstash的pipeline文件夹下创建post-yml"><a href="#在logstash的pipeline文件夹下创建post-yml" class="headerlink" title="在logstash的pipeline文件夹下创建post.yml"></a>在logstash的pipeline文件夹下创建post.yml</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">input</span> &#123;</span><br><span class="line">   <span class="string">jdbc</span> &#123;</span><br><span class="line">       <span class="string">jdbc_driver_library</span> <span class="string">=&gt;</span> <span class="string">&quot;/usr/share/logstash/lib/mysql-connector-java-8.0.29.jar&quot;</span> <span class="comment">#指定mysql驱动jar包的位置，若使用的是docker搭建则需要将驱动上传到容器中。</span></span><br><span class="line">       <span class="string">jdbc_driver_class</span> <span class="string">=&gt;</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span> <span class="comment">#指定mysql驱动</span></span><br><span class="line">       <span class="string">jdbc_connection_string</span> <span class="string">=&gt;</span> <span class="string">&quot;jdbc:mysql://db:3306/logstash_sample&quot;</span></span><br><span class="line">       <span class="string">jdbc_user</span> <span class="string">=&gt;</span> <span class="string">&quot;lucian&quot;</span></span><br><span class="line">       <span class="string">jdbc_password</span> <span class="string">=&gt;</span> <span class="string">&quot;123456&quot;</span></span><br><span class="line">       <span class="string">jdbc_default_timezone</span> <span class="string">=&gt;</span> <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line"></span><br><span class="line">       <span class="string">schedule</span> <span class="string">=&gt;</span> <span class="string">&quot;* * * * *&quot;</span> <span class="comment"># 每分钟执行一次</span></span><br><span class="line">       <span class="string">statement</span> <span class="string">=&gt;</span> <span class="string">&quot;select id, title, description, content, updated_at, deleted_at from posts&quot;</span> <span class="comment"># 需要传输结果集的sql</span></span><br><span class="line">       <span class="string">tracking_column</span> <span class="string">=&gt;</span> <span class="string">&quot;updated_at&quot;</span></span><br><span class="line">       <span class="string">tracking_column_type</span> <span class="string">=&gt;</span> <span class="string">&quot;timestamp&quot;</span></span><br><span class="line">       <span class="string">lowercase_column_names</span> <span class="string">=&gt;</span> <span class="literal">false</span></span><br><span class="line">       <span class="string">record_last_run</span> <span class="string">=&gt;</span> <span class="literal">true</span></span><br><span class="line">       <span class="string">jdbc_paging_enabled</span> <span class="string">=&gt;</span> <span class="literal">true</span> <span class="comment">#开启分页</span></span><br><span class="line">       <span class="string">jdbc_page_size</span> <span class="string">=&gt;</span> <span class="number">1000</span> <span class="comment"># 分页数</span></span><br><span class="line"></span><br><span class="line">       <span class="string">clean_run</span> <span class="string">=&gt;</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">filter</span> &#123;</span><br><span class="line">    <span class="comment"># 如果deleted_at有值则执行删除操作，如果没有则执行</span></span><br><span class="line">    <span class="string">if</span> [<span class="string">deleted_at</span>] &#123;</span><br><span class="line">        <span class="string">mutate</span>&#123; <span class="string">add_field</span> <span class="string">=&gt;</span> &#123; <span class="string">&quot;[@metadata][action]&quot;</span> <span class="string">=&gt;</span> <span class="string">&quot;delete&quot;</span>&#125;&#125;</span><br><span class="line">      &#125; <span class="string">else</span> &#123;</span><br><span class="line">        <span class="string">mutate</span>&#123; <span class="string">add_field</span> <span class="string">=&gt;</span> &#123; <span class="string">&quot;[@metadata][action]&quot;</span> <span class="string">=&gt;</span> <span class="string">&quot;index&quot;</span>&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="string">mutate</span> &#123;</span><br><span class="line">      <span class="string">remove_field</span> <span class="string">=&gt;</span> [<span class="string">&quot;updated_at&quot;</span>, <span class="string">&quot;deleted_at&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">output</span> &#123;</span><br><span class="line">  <span class="string">elasticsearch</span> &#123;</span><br><span class="line">    <span class="string">action</span> <span class="string">=&gt;</span> <span class="string">&quot;<span class="template-variable">%&#123;[@metadata][action]&#125;</span>&quot;</span></span><br><span class="line">    <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;elasticsearch:9200&quot;</span>]</span><br><span class="line">    <span class="string">index</span> <span class="string">=&gt;</span> <span class="string">&quot;posts&quot;</span></span><br><span class="line">    <span class="string">document_id</span> <span class="string">=&gt;</span> <span class="string">&quot;<span class="template-variable">%&#123;id&#125;</span>&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="string">stdout</span> &#123;</span><br><span class="line">    <span class="string">codec</span> <span class="string">=&gt;</span> <span class="string">json_lines</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="使用kibana创建posts索引"><a href="#使用kibana创建posts索引" class="headerlink" title="使用kibana创建posts索引"></a>使用kibana创建posts索引</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT posts</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &#123;&quot;type&quot;: &quot;keyword&quot;&#125;,</span><br><span class="line">      &quot;description&quot;: &#123;&quot;type&quot;: &quot;keyword&quot;&#125;,</span><br><span class="line">      &quot;content&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="查看logstash日志"><a href="#查看logstash日志" class="headerlink" title="查看logstash日志"></a>查看logstash日志</h1><p><img src="/uploads/logstash_log.png" alt="查看logstash日志"></p>
<h1 id="验证传输结果"><a href="#验证传输结果" class="headerlink" title="验证传输结果"></a>验证传输结果</h1><p><img src="/uploads/validate_result.png" alt="验证传输结果"></p>
<h1 id="相关用例链接"><a href="#相关用例链接" class="headerlink" title="相关用例链接"></a>相关用例链接</h1><p><a href="https://github.com/josiahdeng/Xplan/tree/master/logstash_sample">logstash_sample</a></p>
]]></content>
      <tags>
        <tag>logstash</tag>
      </tags>
  </entry>
  <entry>
    <title>elasticsearch(1)</title>
    <url>/2022/08/05/elasticsearch-1/</url>
    <content><![CDATA[<h1 id="安装并运行elasticsearch"><a href="#安装并运行elasticsearch" class="headerlink" title="安装并运行elasticsearch"></a>安装并运行elasticsearch</h1><h2 id="拉取elasticsearch镜像"><a href="#拉取elasticsearch镜像" class="headerlink" title="拉取elasticsearch镜像"></a>拉取elasticsearch镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull elasticsearch:7.17.5</span><br></pre></td></tr></table></figure>
<p><img src="/uploads/%E6%8B%89%E5%8F%96elasticsearch%E9%95%9C%E5%83%8F.png" alt="拉取elasticsearch镜像"></p>
<h2 id="运行elasticsearch镜像"><a href="#运行elasticsearch镜像" class="headerlink" title="运行elasticsearch镜像"></a>运行elasticsearch镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d --name elasticsearch -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; elasticsearch:7.17.5</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">暴露9200和9200端口</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">9200是http协议 用于外部连接</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">9300是tcp协议 用于jar之间的通讯，es集群用的就是9300</span></span><br></pre></td></tr></table></figure>
<p><img src="/uploads/%E8%BF%90%E8%A1%8Celasticsearch.png" alt="运行elasticsearch"></p>
<h2 id="验证elasticsearch是否运行成功"><a href="#验证elasticsearch是否运行成功" class="headerlink" title="验证elasticsearch是否运行成功"></a>验证elasticsearch是否运行成功</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl &#x27;http://localhost:9200&#x27;</span><br></pre></td></tr></table></figure>
<p><img src="/uploads/%E9%AA%8C%E8%AF%81elasticseach%E7%BB%93%E6%9E%9C.png" alt="验证elasticsearch结果"></p>
<h1 id="安装并运行kibana"><a href="#安装并运行kibana" class="headerlink" title="安装并运行kibana"></a>安装并运行kibana</h1><h2 id="拉取kibana镜像"><a href="#拉取kibana镜像" class="headerlink" title="拉取kibana镜像"></a>拉取kibana镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意要与elasticsearch版本一致</span></span><br><span class="line">docker pull kibana:7.17.5</span><br></pre></td></tr></table></figure>
<p><img src="/uploads/%E6%8B%89%E5%8F%96kibana%E9%95%9C%E5%83%8F.png" alt="拉取kibana镜像"></p>
<h2 id="运行kibana"><a href="#运行kibana" class="headerlink" title="运行kibana"></a>运行kibana</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">暴露端口5601</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">192.168.31.157为本机地址</span></span><br><span class="line">docker run -d --name kibana -p 5601:5601 -e ELASTICSEARCH_HOSTS=http://192.168.31.157:9200 kibana:7.17.5</span><br></pre></td></tr></table></figure>
<p><img src="/uploads/%E8%BF%90%E8%A1%8Ckibana.png" alt="运行kibana"></p>
<h2 id="验证kibana是否运行成功"><a href="#验证kibana是否运行成功" class="headerlink" title="验证kibana是否运行成功"></a>验证kibana是否运行成功</h2><p>浏览器打开<a href="http://localhost:5601/">http://localhost:5601</a><br><img src="/uploads/%E6%A3%80%E6%9F%A5kibana%E6%98%AF%E5%90%A6%E8%BF%90%E8%A1%8C%E6%88%90%E5%8A%9F.png" alt="检查kibana是否运行成功"><br>见到此画面则表示kibana运行成功</p>
]]></content>
      <categories>
        <category>elasticsearch</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
        <tag>nosql</tag>
      </tags>
  </entry>
</search>
